// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from recognizer.djinni

#import "BNBFeatureId.h"
#import "BNBFrameData.h"
#import "BNBRecognizerMode.h"
#import <Foundation/Foundation.h>
@class BNBRecognizer;
@protocol BNBFeature;



#ifndef DJINNI_EXPORT
    #define DJINNI_EXPORT __attribute__((__visibility__("default")))
#endif

DJINNI_EXPORT
@interface BNBRecognizer : NSObject

+ (nullable BNBRecognizer *)create:(BNBRecognizerMode)mode;

+ (int64_t)getFeatureId:(BNBFeatureId)feature;

- (nullable id<BNBFeature>)getFeature:(BNBFeatureId)feature;

- (void)setFeatures:(nonnull NSSet<NSNumber *> *)features;

- (void)addFeature:(nullable id<BNBFeature>)feature
      dependencies:(nonnull NSSet<NSNumber *> *)dependencies;

- (void)removeFeature:(nullable id<BNBFeature>)feature;

/** sets maximum allowed face results, if face tracking feature is present */
- (void)setMaxFaces:(int32_t)num;

- (void)setOfflineMode:(BOOL)on;

/**
 * Set future frame filtrarion mode.
 * Produce smoother recognition result (anti jitter), however adds inconsistency in push'ed/pop'ed frames (one frame lag)
 * Applied only in push_camera_frame/pop_frame_data methods, when offline mode is disabled.
 * Example: push frame 1 - pop frame 1, push frame 2 - pop frame 1, push frame 3 - pop frame 2, ...
 */
- (void)setUseFutureFilter:(BOOL)on;

/**
 * Set future frame interpolation mode.
 * Produce faster recognition result (skip even frames), however adds inconsistency in push'ed/pop'ed frames (one frame lag)
 * Applied only in push_camera_frame/pop_frame_data methods, when offline mode is disabled.
 * Example: push frame 1 - pop frame 1, push frame 2 - pop frame 1, push frame 3 - pop frame 2, ...
 */
- (void)setUseFutureInterpolate:(BOOL)on;

- (void)process:(nullable BNBFrameData *)frameData;

- (void)pushCameraFrame:(nullable BNBFrameData *)inputFrameData;

- (BOOL)popFrameData:(nullable BNBFrameData *)outputFrameData;

/** start the recognizer */
- (void)start;

/** pause the recognizer */
- (void)pause;

/** pause + clear */
- (void)stop;

/** clear input and output buffers and pipeline state, also clean cached features */
- (void)clear;

@end

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from scene.djinni

#import "BNBImageType.h"
#import "BNBMorphingType.h"
#import "BNBProceduralAlgorithmType.h"
#import "BNBSegmentationMaskType.h"
#import <Foundation/Foundation.h>
@class BNBAudioTrack;
@class BNBFace;
@class BNBHand;
@class BNBImage;
@class BNBMaterial;
@class BNBMesh;
@class BNBMorphing;
@class BNBRenderTarget;
@class BNBResource;


/**Factory for assets creating and their data uploading. */

#ifndef DJINNI_EXPORT
    #define DJINNI_EXPORT __attribute__((__visibility__("default")))
#endif

DJINNI_EXPORT
@interface BNBAssetManager : NSObject

/**
 *create image of given type
 *@param name (string): image name
 *@param type (image_type): image type
 *@return created image (image).
 */
- (nullable BNBImage *)createImage:(nonnull NSString *)name
                              type:(BNBImageType)type;

/**
 *create resource and start async loading in the asset_manager threadpool
 *@param name (resource): resource filename
 *@return created resource (resource).
 */
- (nullable BNBResource *)createResource:(nonnull NSString *)filename;

- (nullable BNBImage *)createSegmentationMask:(nonnull NSString *)name
                                         type:(BNBSegmentationMaskType)type;

- (nullable BNBImage *)createProceduralTexture:(nonnull NSString *)name
                                          type:(BNBProceduralAlgorithmType)type;

/**
 *creates render target
 *@param name (string): render target name
 *@return created render target (render_target).
 */
- (nullable BNBRenderTarget *)createRenderTarget:(nonnull NSString *)name;

/**
 *creates audio_track
 *@param name (string): audio track name
 *@return created audio track (audio_track).
 */
- (nullable BNBAudioTrack *)createAudioTrack:(nonnull NSString *)name;

/**
 *creates face
 *@param name (string): face name
 *@return created face (face).
 */
- (nullable BNBFace *)createFace:(nonnull NSString *)name;

/**
 *creates morphing
 *@param name (string): morphing name
 *@return created morphing (morphing).
 */
- (nullable BNBMorphing *)createMorph:(nonnull NSString *)name
                                 type:(BNBMorphingType)type;

/**
 *creates static mesh
 *@param name (string): mesh name
 *@return created mesh (mesh).
 */
- (nullable BNBMesh *)createStaticMesh:(nonnull NSString *)name;

/**
 *creates dynamicaly updated mesh
 *@param name (string): mesh name
 *@param path (string): path to mesh
 *@return created mesh (mesh).
 */
- (nullable BNBMesh *)createDynamicMesh:(nonnull NSString *)name
                                   path:(nonnull NSString *)path;

/**
 *creates hand
 *@param name (string): hand name
 *@return created hand (hand).
 */
- (nullable BNBHand *)createHand:(nonnull NSString *)name;

/**
 *upload mesh file
 *@param mesh (mesh): mesh
 *@param fileName (string): file to upload
 */
- (void)uploadMeshData:(nullable BNBMesh *)mesh
              fileName:(nonnull NSString *)fileName;

/**
 *creates material
 *@param name (string): material name
 *@return created material (material).
 */
- (nullable BNBMaterial *)createMaterial:(nonnull NSString *)name
                                    path:(nonnull NSString *)path;

/**
 *Find image by specified name. Returns null if image not found.
 *@param name (string) image name.
 */
- (nullable BNBImage *)findImage:(nonnull NSString *)name;

/**
 *Find render target by specified name. Returns null if render target not found.
 *@param name (string) render target name.
 */
- (nullable BNBRenderTarget *)findRenderTarget:(nonnull NSString *)name;

/**
 *Find audio track by specified name. Returns null if audio track not found.
 *@param name (string) audio track name.
 */
- (nullable BNBAudioTrack *)findAudioTrack:(nonnull NSString *)name;

/**
 *Find face by specified name. Returns null if face not found.
 *@param name (string) face name.
 */
- (nullable BNBFace *)findFace:(nonnull NSString *)name;

/**
 *Find hand by specified name. Returns null if hand not found.
 *@param name (string) hand name.
 */
- (nullable BNBHand *)findHand:(nonnull NSString *)name;

/**
 *Find morph by specified name. Returns null if morph not found.
 *@param name (string) morph name.
 */
- (nullable BNBMorphing *)findMorph:(nonnull NSString *)name;

/**
 *Find mesh by specified name. Returns null if mesh not found.
 *@param name (string) mesh name.
 */
- (nullable BNBMesh *)findMesh:(nonnull NSString *)name;

/**
 *Find material by specified name. Returns null if material not found.
 *@param name (string) material name.
 */
- (nullable BNBMaterial *)findMaterial:(nonnull NSString *)name;

@end

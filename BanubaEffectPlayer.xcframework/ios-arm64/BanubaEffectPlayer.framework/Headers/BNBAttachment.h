// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from scene.djinni

#import "BNBAttachmentInfo.h"
#import "BNBAttachmentType.h"
#import "BNBPixelFormatType.h"
#import "BNBTextureFilteringMode.h"
#import "BNBVec4.h"
#import <Foundation/Foundation.h>
@class BNBImage;


/**Class, represents render target attachment. Subclass of image */

#ifndef DJINNI_EXPORT
    #define DJINNI_EXPORT __attribute__((__visibility__("default")))
#endif

DJINNI_EXPORT
@interface BNBAttachment : NSObject

/**@return attachment type (attachment_type). Can be color, or depth */
- (BNBAttachmentType)getAttachmentType;

/**@param type (attachment_type). Can be color, or depth */
- (void)setType:(BNBAttachmentType)type;

/**@param color (vec4). Also implisity set attachment load behaviour to clear. */
- (void)setClearColor:(nonnull BNBVec4 *)color;

/**@return attachment clear color (vec4) */
- (nonnull BNBVec4 *)getClearColor;

/**
 *set attachment width
 *@param width (int)
 */
- (void)setWidth:(int32_t)value;

/**
 *set attachment height
 *@param height (int)
 */
- (void)setHeight:(int32_t)value;

/**@return attachment width (int) */
- (int32_t)getWidth;

/**@return attachment height (int) */
- (int32_t)getHeight;

- (void)setInfo:(nonnull BNBAttachmentInfo *)info;

- (nonnull BNBAttachmentInfo *)getInfo;

/**set attachment pixel format */
- (void)setFormat:(BNBPixelFormatType)format;

/**@return attachment pixel format */
- (BNBPixelFormatType)getFormat;

/**
 *set attachment texture filtering mode
 *param mode (texture_filtering_mode)
 */
- (void)setFilteringMode:(BNBTextureFilteringMode)value;

/**@return filtering mode (texture_filtering_mode) */
- (BNBTextureFilteringMode)getFilteringMode;

/**@return upcast to base type */
- (nullable BNBImage *)asImage;

@end

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from scene.djinni

#import <Foundation/Foundation.h>
@class BNBLayer;
@class BNBRenderList;
@class BNBRenderTarget;


/**
 *A list of render task. 
 *Every task consist of entites layer to draw, render target in which draw, and optional
 *list of sub geomteries names. Cannot be changed after effect activation.
 */

#ifndef DJINNI_EXPORT
    #define DJINNI_EXPORT __attribute__((__visibility__("default")))
#endif

DJINNI_EXPORT
@interface BNBRenderList : NSObject

/**
 *Fabric method for render_list creating.
 *@return created render list (render_list).
 */
+ (nullable BNBRenderList *)create:(nonnull NSString *)name;

/**
 *Set name of the render list
 *@param name (string)
 */
- (void)setName:(nonnull NSString *)name;

/**@return name (string) of the render list */
- (nonnull NSString *)getName;

- (int64_t)getTasksCount;

/**
 *add render task to layer.
 *@param layer (layer): entities layer.
 *@param target (render_target): needed render target. Do not change if previous target was the same. (Target changing will trigger start/finish behavior.)
 *@param subGeoms (optional<list<string>>): if specified: only sub geometries from this list will be rendered.
 */
- (int32_t)addTask:(nullable BNBLayer *)layer
            target:(nullable BNBRenderTarget *)target
          subGeoms:(nullable NSArray<NSString *> *)subGeoms;

/**
 *return render rask layer, by render task index. Throw if index >= tasks size.
 *@param taskIndex (int): render task index.
 *@return task layer (layer)
 */
- (nullable BNBLayer *)getTaskLayer:(int32_t)taskIndex;

/**
 *return render selected task sub geometries. If list is empty - all sub geometries will be rendered
 *@param taskIndex (int): render task index.
 *@return sub geometries list (list<string>): list of sub geometries to render
 */
- (nonnull NSArray<NSString *> *)getTaskSubGeometries:(int32_t)taskIndex;

/**
 *return render rask render target, by render task index. Throw if index >= tasks size.
 *@param taskIndex (int): render task index.
 *@return task render target (render_target)
 */
- (nullable BNBRenderTarget *)getTaskTarget:(int32_t)taskIndex;

/**Remove all render tasks. */
- (void)clear;

@end

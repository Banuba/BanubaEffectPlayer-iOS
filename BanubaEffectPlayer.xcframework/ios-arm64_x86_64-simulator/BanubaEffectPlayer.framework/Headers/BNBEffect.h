// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from effect_player.djinni

#import "BNBScene.h"
#import <Foundation/Foundation.h>
@protocol BNBJsCallback;


__attribute__((__visibility__("default"))) @interface BNBEffect : NSObject

/** Thread-safe. May be called from any thread */
- (nonnull NSString *)url;

/**
 * Call js method in effect. 
 * @param methodName JS global function name. Member functions are not supported.
 * @param params Function arguments.
 * @depreacted Use `evalJs` instead.
 */
- (void)callJsMethod:(nonnull NSString *)methodName
              params:(nonnull NSString *)params;

/**
 * Evaluate the `script` in effect. This method is thread safe.
 * @param sctipt JS string to execute 
 * @param js_callback Callback for result, will be called in render thread.
 */
- (void)evalJs:(nonnull NSString *)script
resultCallback:(nullable id<BNBJsCallback>)resultCallback;

/**
 * Evaluate the `script` in effect.
 * MUST be called from the render thread
 * @param sctipt JS string to execute 
 * @return JS evaluation result
 */
- (nonnull NSString *)evalJsSync:(nonnull NSString *)script;

/**
 * reset effect state
 * MUST be called from the render thread
 */
- (void)reset;

/**
 * If effect is based on Scene engine and it is activated completly - returns Scene object from the effect.
 * Otherwise returns null.
 * MUST be called from the render thread
 * Returned Scene object MUST be used only from the render thread and only while the effect is in the activated state.
 */
- (nullable BNBScene *)scene;

/**
 * deserialize effect from config.json.
 * can be called from any thread
 */
- (void)deserialize:(nonnull NSString *)resolvedUrl;

/**
 * activate current effect
 * MUST be called from the render thread for OpenGL backends.
 */
- (void)activate:(int32_t)fxWidth
        fxHeight:(int32_t)fxHeight
    surfaceWidth:(int32_t)surfaceWidth
   surfaceHeight:(int32_t)surfaceHeight;

- (void)dumpFs:(nonnull NSString *)outDir;

- (void)dump;

- (nonnull NSString *)dumpJson;

@end

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from scene.djinni

#import "BNBVec3.h"
#import <Foundation/Foundation.h>


/**Interface for adjustment physics simulation. */

#ifndef DJINNI_EXPORT
    #define DJINNI_EXPORT __attribute__((__visibility__("default")))
#endif

DJINNI_EXPORT
@interface BNBPhysicsSimulator : NSObject

/**
 *Sets gravitation vector.
 *@param gravity (vec3): gravity value
 */
- (void)setGravity:(nonnull BNBVec3 *)gravity;

/**
 *Sets damping value.
 *@param damping (float): damping value
 */
- (void)setDamping:(float)damping;

/**
 *Sets inverse bone mass.
 *@param boneName (string): bone name
 *@param value (float): inverse bone mass
 */
- (void)setInvMass:(nonnull NSString *)boneName
             value:(float)value;

/**
 *Add sphere collider.
 *@param sphereIndex (int): index for sphere
 *@param center (vec3): sphere center in world space
 *@param radius (float): sphere radius
 */
- (void)setSphereCollider:(int32_t)sphereIndex
                   center:(nonnull BNBVec3 *)center
                   radius:(float)radius;

/**
 *Add constraint between bone1 and bone2.
 *@param bone1Name (string): from bone name
 *@param bone2Name (string): to bone name
 *@param distance (float): constaint length
 */
- (void)setConstraint:(nonnull NSString *)bone1Name
            bone2Name:(nonnull NSString *)bone2Name
             distance:(float)distance;

/**
 *Sets bonesInMvSpace flag
 *false for legacy effects with special vertex shaders
 *true for using same vertex shaders as for non-physics meshes
 */
- (void)setBonesInMvSpace:(BOOL)bonesInMvSpace;

/**Reset simulator to default state */
- (void)reset;

@end
